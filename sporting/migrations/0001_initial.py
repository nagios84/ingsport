# Generated by Django 5.0.1 on 2024-04-08 14:32

import django.core.validators
import django.db.models.deletion
import phonenumber_field.modelfields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('director', models.CharField(blank=True, max_length=200, null=True)),
                ('address', models.CharField(blank=True, max_length=300, null=True)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=20, null=True, region='RU')),
                ('latitude', models.FloatField(blank=True, default=None, null=True, validators=[django.core.validators.MinValueValidator(-90), django.core.validators.MaxValueValidator(90)])),
                ('longitude', models.FloatField(blank=True, default=None, null=True, validators=[django.core.validators.MinValueValidator(-180), django.core.validators.MaxValueValidator(180)])),
                ('attendance', models.PositiveIntegerField(blank=True, null=True)),
                ('capacity', models.PositiveIntegerField(blank=True, null=True)),
                ('locker_room', models.BooleanField(blank=True, default=False, null=True)),
                ('shower_room', models.BooleanField(blank=True, default=False, null=True)),
                ('jurisdiction', models.CharField(blank=True, max_length=300, null=True, verbose_name='Учредитель')),
            ],
        ),
        migrations.CreateModel(
            name='Reward',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('reward_date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='SportFederation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Название федерации')),
                ('address', models.CharField(max_length=100, verbose_name='Адрес федерации')),
                ('president', models.CharField(max_length=100, verbose_name='Президент федерации')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=20, null=True, region='RU', verbose_name='Телефон федерации')),
                ('phone_number2', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=20, null=True, region='RU', verbose_name='Телефон федерации 2')),
                ('email', models.EmailField(blank=True, max_length=100, null=True, verbose_name='Email федерации')),
                ('latitude', models.FloatField(blank=True, default=None, null=True, validators=[django.core.validators.MinValueValidator(-90), django.core.validators.MaxValueValidator(90)])),
                ('longitude', models.FloatField(blank=True, default=None, null=True, validators=[django.core.validators.MinValueValidator(-180), django.core.validators.MaxValueValidator(180)])),
            ],
        ),
        migrations.CreateModel(
            name='Sport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Вид спорта')),
                ('type_of_sport', models.CharField(blank=True, max_length=100, null=True, verbose_name='Тип спорта')),
                ('is_olimpic', models.BooleanField(blank=True, default=False, null=True, verbose_name='Олимпиада')),
                ('is_for_women', models.BooleanField(blank=True, default=False, null=True, verbose_name='Для женщин')),
                ('federation', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sport', to='sporting.sportfederation')),
            ],
        ),
        migrations.CreateModel(
            name='Trainer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fio', models.CharField(max_length=100)),
                ('slug', models.SlugField(blank=True, max_length=100, null=True, unique=True)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('experience', models.DateField(blank=True, null=True)),
                ('attendance', models.PositiveIntegerField(blank=True, null=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='trainers/djangodbmodelsfieldscharfield')),
                ('is_published', models.BooleanField(default=True)),
                ('place', models.ManyToManyField(blank=True, related_name='trainers', to='sporting.place', verbose_name='Место преподавания')),
                ('rewards', models.ManyToManyField(blank=True, related_name='awarded', to='sporting.reward', verbose_name='Награды')),
                ('sport', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='trainers', to='sporting.sport', verbose_name='Спорт')),
            ],
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Название секции')),
                ('place', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sections', to='sporting.place')),
                ('sport', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sections', to='sporting.sport')),
                ('federation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sections', to='sporting.sportfederation')),
                ('trainers', models.ManyToManyField(related_name='sections', to='sporting.trainer', verbose_name='Тренеры')),
            ],
        ),
    ]
